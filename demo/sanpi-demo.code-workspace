{
    "folders": [
        {
            "path": "/share/compling/projects/sanpi/demo"
        }
    ],
    "launch": {
        "version": "0.2.0",
        "configurations": [
            // current file
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "Python: Current File",
                "program": "${file}",
                "request": "launch",
                "type": "python"
            },
            // * count negative contexts
            // count_neg --help
            {
                "name": "count_neg --help",
                "type": "python",
                "request": "launch",
                "program": "source/analyze/count_neg.py",
                "console": "integratedTerminal",
                "justMyCode": true,
                "cwd": "/home/arh234/projects/sanpi/demo",
                "args": [
                    "--help"
                ]
            },
            // count_neg RBdirect
            {
                "name": "count_neg RBdirect",
                "type": "python",
                "request": "launch",
                "program": "source/analyze/count_neg.py",
                "console": "integratedTerminal",
                "justMyCode": true,
                "cwd": "/home/arh234/projects/sanpi/demo",
                "args": [
                    "-d",
                    "data/2_hit_tables/RBdirect",
                    "-b",
                    "data/4_post-processed/RBXadj/bigram-IDs_thr0-001p.1f.txt",
                    "-o",
                    "results/freq_out/RBdirect"
                ]
            },
            //* grewpy subsets
            {
                "name": "subset - nyt200405",
                "type": "python",
                "request": "launch",
                "program": "script/create_grewpy_subset.py",
                "console": "integratedTerminal",
                "args": [
                    "-n",
                    "bigram",
                    "data/corpora/gitrepo_puddin/2smallest.conll/nyt_eng_200405.conllu",
                ]
            },
            //* dependency analysis
            {
                "console": "integratedTerminal",
                "name": "analyze_deps demo SAMPLE 5",
                "program": "source/analyze_deps.py",
                "request": "launch",
                "type": "python",
                // "python": "/home/arh234/.conda/envs/dev-sanpi/bin/python",
                //usage: analyze_deps.py [-h] [-i INPUT_DIR] [-d DEP_DF]
                // [-g GLOB_EXPR] [-o OUTPUT_DIR]
                // [-n NAME] [-s SAMPLE_SIZE] [-v] [-t]
                "args": [
                    "-i",
                    "data/2_hit_tables",
                    "-n",
                    "demo_5",
                    "-o",
                    "data/3",
                    "-s",
                    "5",
                    "-t",
                    "-v",
                ]
            },
            {
                "console": "integratedTerminal",
                "name": "analyze_deps demo devExtend/bigram_smallest*",
                "program": "/share/compling/projects/sanpi/source/analyze_deps.py",
                "request": "launch",
                "type": "python",
                // "python": "/home/arh234/.conda/envs/dev-sanpi/bin/python",
                //usage: analyze_deps.py [-h] [-i INPUT_DIR] [-d DEP_DF]
                // [-g GLOB_EXPR] [-o OUTPUT_DIR]
                // [-n NAME] [-s SAMPLE_SIZE] [-v] [-t]
                "cwd": "/home/arh234/projects/sanpi/demo",
                "args": [
                    "-g",
                    "*bigram_smallest*hits.pkl*",
                    "-i",
                    "data/2_hit_tables",
                    "-o",
                    "data/3_dep_info",
                    "-n",
                    "bigram_smallest",
                ]
            },
            //* run_pipeline 
            // help message
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline HELP",
                "program": "run_pipeline.py",
                "request": "launch",
                "cwd": "/home/arh234/projects/sanpi/demo",
                "type": "python",
                "args": [
                    "-h"
                ],
            },
            // run_pipeline PccX2 contig
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline PccX2 RBsimple",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/puddin/PccX2.conll",
                    "-p",
                    "Pat/RBsimple"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_small contig
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_small contig",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_small",
                    "-p",
                    "Pat/contig"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_small RBscoped
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_small RBscoped",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_small",
                    "-p",
                    "Pat/RBscoped"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_small RBXadj
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_small RBXadj",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "-R",
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_small",
                    "-p",
                    "Pat/RBXadj"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_small RBcontig
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_small RBcontig",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "-R",
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_small",
                    "-p",
                    "Pat/RBcontig"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline DEBUG RBraised
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline DEBUG RBraised",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/debug",
                    "-R",
                    "-p",
                    "Pat/RBraised"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline DEBUG RBscoped
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline DEBUG RBscoped",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/debug",
                    "-R",
                    "-p",
                    "Pat/RBscoped"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline -R DEBUG RBcontig
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline -R DEBUG RBcontig",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "-R",
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/debug",
                    "-R",
                    "-p",
                    "Pat/RBcontig"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline -R mixed10 RBcontig
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline -R BigramDEBUG RBcontig",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "-R",
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/small/BigramDebug.conll",
                    "-p",
                    "Pat/RBcontig"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_small devExtend
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_small devExtend",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_small",
                    "-p",
                    "Pat/devExtend",
                    // "-R"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_smallest RBdirect-mirror
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_smallest RBdirect-mirror",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_smallest",
                    "-p",
                    "Pat/RBdirect-mirror",
                    // "-R"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_smallest NEG-head-dev
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_smallest NEG-head-dev",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_smallest",
                    "-p",
                    "Pat/NEG-head-dev",
                    // "-R"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_XX3puddin devOct19
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_XX3puddin devOct19",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_XX3puddin",
                    "-p",
                    "Pat/devOct19",
                    // "-R"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_smaller oct13devel
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_smaller oct13devel",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_smaller",
                    "-p",
                    "Pat/oct13devel",
                    "-R"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_smaller devel
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_smaller devel",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_smaller",
                    "-p",
                    "Pat/devel",
                    "-R"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_small RBraised
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigram_small RBraised",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_small",
                    "-p",
                    "Pat/RBraised"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline 2smallest-bigrams RBraised
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline 2smallest-bigrams RBraised",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/git_commit/2smallest.conll/subset_bigram",
                    "-p",
                    "Pat/RBraised"
                ],
                "cwd": "/home/arh234/projects/sanpi/demo"
            },
            // run_pipeline bigram_X2puddin RBcontig
            {
                "console": "integratedTerminal",
                "justMyCode": true,
                "name": "run_pipeline bigrams_X2puddin RBcontig",
                "program": "run_pipeline.py",
                "request": "launch",
                "type": "python",
                "cwd": "/home/arh234/projects/sanpi/demo",
                "args": [
                    // ! for ../demo/ launch configs, give relative paths
                    "--grew_output_dir",
                    "data/1_json_grew-matches",
                    "-c",
                    "data/corpora/subsets/bigrams/bigram_X2puddin",
                    "-p",
                    "Pat/RBcontig"
                ],
            },
            // * count_bigrams
            // count_bigrams bigram_X2puddin RBXadj
            {
                "name": "count_bigrams RBXadj 4f (default%)",
                "type": "python",
                "request": "launch",
                "program": "source/analyze/count_bigrams.py",
                "console": "integratedTerminal",
                "justMyCode": true,
                "cwd": "/home/arh234/projects/sanpi/demo",
                "args": [
                    "--n_files",
                    "4",
                    "--data_dir",
                    "data/2_hit_tables/RBXadj",
                    "--post_proc_dir",
                    "data/4_post-processed/RBXadj",
                    "-o",
                    "results/freq_out/RBXadj"
                ]
            },
            // count_bigrams bigram_X2puddin RBXadj
            {
                "name": "count_bigrams 1f RBXadj (default%)",
                "type": "python",
                "request": "launch",
                "program": "source/analyze/count_bigrams.py",
                "console": "integratedTerminal",
                "justMyCode": true,
                "cwd": "/home/arh234/projects/sanpi/demo",
                "args": [
                    "-f",
                    "1",
                    "-d",
                    "data/2_hit_tables/RBXadj",
                    "-p",
                    "data/4_post-processed",
                    "-o",
                    "results/freq_out"
                ]
            },
        ],
    },
    "settings": {
        "editor.fontFamily": "Iosevka fixed ss02, Roboto Mono, Consolas, 'Courier New', monospace",
        "editor.fontSize": 13,
        "explorerExclude.backup": {},
        "files.exclude": {
            "**/.git": true,
            "**/.svn": true,
            "**/.hg": true,
            "**/CVS": true,
            "**/.DS_Store": true,
            "**/Thumbs.db": true,
            "**/*conda3": true,
            "**/*kaldi*": true,
            "**/.[^b]*": true,
            "**/.bash_[hl]*": true,
            "**/stanza_resources": true,
            "**/__pycache__": true,
            "**/__init__.py": true
        },
        // "python.linting.banditEnabled": false,
        // "python.linting.cwd": "/share/compling/projects/sanpi/demo",
        // "python.linting.flake8Enabled": false,
        // "python.linting.mypyEnabled": false,
        // "python.linting.prospectorEnabled": false,
        "solarizedCustomTheme.accentColor": "Magenta",
        "terminal.integrated.minimumContrastRatio": 5,
        "window.autoDetectColorScheme": true,
        // "workbench.preferredDarkColorTheme": "semantic-rainbow",
        // "workbench.preferredDarkColorTheme": "Rainier - Retro",
        // "workbench.preferredDarkColorTheme": "Banner (rainglow)",
        "workbench.preferredDarkColorTheme": "SynthWave '84",
        // "workbench.preferredDarkColorTheme": "vscode carbon theme",
        // "workbench.preferredDarkColorTheme": "Zeonica",
        // "workbench.preferredDarkColorTheme": "Abyss",
        // "workbench.preferredLightColorTheme": "Ayu Light Bordered",
        // "workbench.preferredLightColorTheme": "Solarized-light-fjs",
        // "workbench.preferredLightColorTheme": "Solarized Custom Light",
        "workbench.preferredLightColorTheme": "Noctis Lux",
        // "workbench.preferredLightColorTheme": "Modern Purple Theme Light",
        // "workbench.preferredLightColorTheme": "Joker Light (rainglow)",
        // "workbench.preferredLightColorTheme": "Gruvbox Light Soft",
        "files.watcherExclude": {
            "**/demo/data/**": true
        },
        "workbench.colorTheme": "SynthWave '84",
        "workbench.colorCustomizations": {
            "activityBar.background": "#012f3a",
            "activityBar.foreground": "#4a94a6",
            "titleBar.activeBackground": "#014252",
            "titleBar.activeForeground": "#94c2cf",
            "titleBar.inactiveForeground": "#022730",
            "titleBar.inactiveBackground": "#719ca7",
        },
    },
    "extensions": {
        "recommendations": [
            "mechatroner.rainbow-csv"
        ]
    }
}